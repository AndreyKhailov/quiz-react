{"version":3,"sources":["component/details/details.module.css","component/showScore/showScore.module.css","component/main/main.module.css","assets/button/button.module.css","questionsBase.js","assets/button/button.jsx","uniqueKey.js","component/details/details.jsx","component/showScore/showScore.jsx","component/main/main.jsx","App.js","index.js"],"names":["module","exports","questionsBase","questionText","answersOption","answerText","isCorrect","Button","style","handleClick","param","children","className","s","btn","onClick","uniqueKey","randomNumber","Math","round","random","Date","now","Details","score","currentAnswer","setShowDetails","num","details","table","table__title","table__head","table__body","map","question","answerUser","answer__right","answer__noRight","answerTrue","item","table__footer","colSpan","length","score__full","score__count","score__null","ShowScore","setScore","setCurrentAnswer","setShowScore","setCurrentQuestion","useState","isShowDetails","score__title","Main","currentQuestion","handleAnswer","nextQuestion","main","main__title","question__text","question__num","answer__options","App","isShowScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73f321bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"details\":\"details_details__ck1P7\",\"table\":\"details_table__1W9Yb\",\"table__body\":\"details_table__body__NWNPT\",\"table__footer\":\"details_table__footer__67fa0\",\"score__null\":\"details_score__null__3dd3w\",\"answer__noRight\":\"details_answer__noRight__3l9d5\",\"score__full\":\"details_score__full__3Mhg4\",\"answer__right\":\"details_answer__right__1J2PD\",\"table__title\":\"details_table__title__3I6ok\",\"score__count\":\"details_score__count__1558f\",\"btn\":\"details_btn__2PgEX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"showScore_score__hmzYS\",\"score__title\":\"showScore_score__title__1vZpJ\",\"score__count\":\"showScore_score__count__38iMb\",\"score__null\":\"showScore_score__null__sjgOa\",\"score__full\":\"showScore_score__full__2b2bK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__24ZEd\",\"main__title\":\"main_main__title__1sTCe\",\"question\":\"main_question__26ic2\",\"answer__options\":\"main_answer__options__12cuJ\",\"question__num\":\"main_question__num__4iLU2\",\"question__text\":\"main_question__text__3Z6sV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__3r3WQ\"};","export const questionsBase = [\r\n    {\r\n        questionText: 'React JS разработан компанией:',\r\n        answersOption: [\r\n            { answerText: 'Facebook', isCorrect: true },\r\n            { answerText: 'Google', isCorrect: false },\r\n            { answerText: 'Amazon', isCorrect: false },\r\n            { answerText: 'РосЭнергоСбыт', isCorrect: false }\r\n        ],        \r\n    },\r\n    {\r\n        questionText: 'React JS - это',\r\n        answersOption: [\r\n            { answerText: 'База данных', isCorrect: false },\r\n            { answerText: 'ФреймВорк', isCorrect: false },\r\n            { answerText: 'Библиотека', isCorrect: true },\r\n            { answerText: 'Все правильно', isCorrect: false }\r\n        ],        \r\n    },\r\n    {\r\n        questionText: 'Какую часть шаблона проектирования MVC реализует React?',\r\n        answersOption: [\r\n            { answerText: 'Полноценную MVC', isCorrect: false },\r\n            { answerText: '\"Model\" часть', isCorrect: false },\r\n            { answerText: '\"Controller\" часть', isCorrect: false },\r\n            { answerText: '\"View\" часть', isCorrect: true }\r\n        ],        \r\n    },\r\n    {\r\n        questionText: 'Что используется в React для рендеринга HTML?',\r\n        answersOption: [\r\n            { answerText: 'HBS', isCorrect: false },\r\n            { answerText: 'JSX', isCorrect: true },\r\n            { answerText: 'EJS', isCorrect: false },\r\n            { answerText: 'NASA', isCorrect: false }\r\n        ],        \r\n    },\r\n    {\r\n        questionText: 'Всё view перерисовывает React при изминении props или состояния?',\r\n        answersOption: [\r\n            { answerText: 'Да', isCorrect: false },\r\n            { answerText: 'Нет', isCorrect: true },\r\n            { answerText: 'И да, и нет', isCorrect: false },\r\n            { answerText: 'Не знаю', isCorrect: false }\r\n        ],        \r\n    },\r\n    {\r\n        questionText: 'Какой атрибут обязателен при рендеринге компонентов списка?',\r\n        answersOption: [\r\n            { answerText: 'index', isCorrect: false },\r\n            { answerText: 'data-index', isCorrect: false },\r\n            { answerText: 'id', isCorrect: false },\r\n            { answerText: 'key', isCorrect: true },\r\n        ],        \r\n    },\r\n]","import s from './button.module.css';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Button({style, handleClick, param, children}) {\r\n\r\n    Button.propTypes = {\r\n        style: PropTypes.string,\r\n        handleClick: PropTypes.func,\r\n        param: PropTypes.shape(\r\n            {\r\n                answerText: PropTypes.string.isRequired,\r\n                isCorrect: PropTypes.bool,\r\n            }\r\n        ),        \r\n        children: PropTypes.string.isRequired,\r\n    }\r\n\r\n    return (   \r\n        <button \r\n            className={`${s.btn} ${style}`}\r\n            onClick={() => handleClick(param)}\r\n        >\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","export const uniqueKey = () => {\r\n    const randomNumber = Math.round(Math.random()*1000000);\r\n    const uniqueKey = Date.now() + randomNumber;\r\n    return uniqueKey;\r\n}","import React from 'react';\r\n\r\nimport s from './details.module.css';\r\n\r\nimport Button from '../../assets/button/button';\r\n\r\nimport { uniqueKey } from '../../uniqueKey';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction Details({\r\n\r\n  score, currentAnswer,\r\n  questionsBase, setShowDetails,\r\n\r\n}) {\r\n\r\n  Details.propTypes = {\r\n    score: PropTypes.number.isRequired,\r\n    currentAnswer: PropTypes.arrayOf(PropTypes.shape(\r\n      {\r\n        answerText: PropTypes.string.isRequired,\r\n        isCorrect: PropTypes.bool,\r\n      }\r\n    )),\r\n    questionsBase: PropTypes.arrayOf(PropTypes.shape(\r\n      {\r\n        questionText: PropTypes.string.isRequired,\r\n        answersOption: PropTypes.array.isRequired,\r\n      }\r\n    )),\r\n    setShowDetails: PropTypes.func.isRequired,\r\n  }\r\n\r\n  let num = 1;\r\n  function number() { return num++ }; // Вычисляется порядковый номер вопроса и затем выводится в таблицу\r\n\r\n  function handleToBack() { \r\n    setShowDetails(false) // Переход на предыдущую страницу\r\n  };  \r\n\r\n  return (\r\n    <section className={s.details}>\r\n      <table className={s.table}>\r\n        <caption className={s.table__title}>Результат теста</caption>\r\n        <thead className={s.table__head}>\r\n          <tr>\r\n            <th>№</th>\r\n            <th>Вопрос</th>\r\n            <th>Ваш ответ</th>\r\n            <th>Правильный ответ</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className={s.table__body}>\r\n          <tr>\r\n            <td>\r\n              {\r\n                questionsBase.map(() => (\r\n                  <div key={ uniqueKey() }>{ number() }</div> )) // Порядковый номер вопроса\r\n              }\r\n            </td><td>\r\n              {\r\n                questionsBase.map((question) => (\r\n                  <div key={ uniqueKey() }>{question.questionText}</div> )) // Текст вопроса\r\n              }\r\n            </td><td>\r\n              {\r\n                currentAnswer.map((answerUser) => ( // Выводится ответ пользователя \r\n                  <div key={ uniqueKey() }\r\n                       className={answerUser.isCorrect\r\n                                  ? s.answer__right\r\n                                  : s.answer__noRight}\r\n                  >\r\n                    {answerUser.answerText}\r\n                  </div> \r\n                )) \r\n              }            \r\n            </td><td>\r\n              {\r\n                questionsBase.map((answerTrue) =>        // В базе данных перебирается каждый элемент массива\r\n                  answerTrue.answersOption.map((item) =>        // В каждом элементе перебирается массив ответов(answersOption)\r\n                    item.isCorrect && (                         // Делается проверка: какой из ответов правильный\r\n                      <div key={ uniqueKey() }>{item.answerText}</div>    // В таблицу выводится правильный ответ\r\n                  )))\r\n              }      \r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n        <tfoot className={s.table__footer}>\r\n          <tr><td colSpan=\"4\">\r\n            Правильных ответов:\r\n              <span className={\r\n                  (score === questionsBase.length && s.score__full) // Если все правильные ответы, число подсвечивается зеленым\r\n                || (score ? s.score__count : s.score__null)         // Если нет правильных ответов - красным\r\n              }\r\n              >{score}\r\n              </span>/ \r\n              <span className={s.score__full}>{questionsBase.length}</span>\r\n          </td></tr>\r\n        </tfoot>\r\n      </table>\r\n      <Button \r\n        handleClick={handleToBack}\r\n        style={s.btn}\r\n      >\r\n        Назад\r\n      </Button>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Details;","import { useState } from 'react';\r\n\r\nimport s from './showScore.module.css';\r\n\r\nimport Details from '../details/details';\r\nimport Button from '../../assets/button/button';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction ShowScore({ \r\n    score, setScore, questionsBase, \r\n    currentAnswer, setCurrentAnswer,\r\n    setShowScore, setCurrentQuestion,\r\n}) {\r\n    const [isShowDetails, setShowDetails] = useState(false);\r\n\r\n    ShowScore.propTypes = {\r\n        score: PropTypes.number.isRequired,\r\n        questionsBase: PropTypes.array,\r\n    }\r\n\r\n\r\n    function handleDetails() { // Выводится подробная таблица результата теста\r\n        setShowDetails(true);\r\n    }\r\n\r\n    function handleRestart() { /* Прохождение теста с самого начала\r\n                                  State переходит в состояние по умолчанию */\r\n        setScore(0);\r\n        setShowScore(false);\r\n        setCurrentQuestion(0);\r\n        setCurrentAnswer([]);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            {!isShowDetails ?\r\n                <section className={s.score}>\r\n                    <h2 className={s.score__title}>Правильных ответов:\r\n                        <span className={\r\n                            (score === questionsBase.length && s.score__full) // Если все правильные ответы, число подсвечивается зеленым\r\n                            || (score ? s.score__count : s.score__null) }     // Если нет правильных ответов - красным\r\n                        >{score}\r\n                        </span>/ \r\n                        <span className={s.score__full}>\r\n                            {questionsBase.length}\r\n                        </span>\r\n                    </h2>\r\n                    <Button handleClick={handleDetails}>\r\n                        Подробнее\r\n                    </Button>\r\n                    <Button handleClick={handleRestart}>\r\n                        Начать заново\r\n                    </Button>\r\n                </section>\r\n                : \r\n                <Details score={score}\r\n                        currentAnswer={currentAnswer}\r\n                        questionsBase={questionsBase}\r\n                        setShowDetails={setShowDetails}\r\n                />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ShowScore;","import s from './main.module.css';\r\n\r\nimport Button from '../../assets/button/button';\r\n\r\nimport { uniqueKey } from '../../uniqueKey';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Main({\r\n    score, setScore, setShowScore,\r\n    questionsBase, currentAnswer, \r\n    setCurrentAnswer, currentQuestion,\r\n    setCurrentQuestion,\r\n\r\n}) {\r\n\r\n    Main.propTypes = {\r\n      questionsBase: PropTypes.arrayOf(PropTypes.shape(\r\n        {\r\n          questionText: PropTypes.string.isRequired,\r\n          answersOption: PropTypes.array.isRequired,\r\n        }\r\n      )),\r\n      currentQuestion: PropTypes.number.isRequired,\r\n      setCurrentQuestion: PropTypes.func,\r\n      setCurrentAnswer: PropTypes.func,\r\n    }\r\n    \r\n    function handleAnswer(answerUser) {\r\n      setCurrentAnswer([ ...currentAnswer, answerUser]); // Записывается ответ пользователя в локальный state\r\n      answerUser.isCorrect && setScore(score+1); // Делается подсчет правильных ответов\r\n      \r\n      const nextQuestion = currentQuestion + 1; // Переход к следующему вопросу\r\n      if (nextQuestion < questionsBase.length) {\r\n        setCurrentQuestion(nextQuestion); \r\n      } else {\r\n        setShowScore(true);  /* Переход к isShowScore котпоненту. \r\n                            (выводится страница правильных ответов) */\r\n      }\r\n    }\r\n\r\n    return (   \r\n        <main className={s.main}>\r\n          <h1 className={s.main__title}>Тест на знание React JS</h1>   \r\n          <section className={s.question}>\r\n            <p className={s.question__text}>{ questionsBase[currentQuestion].questionText }</p>\r\n            <span className={s.question__num}>Вопрос {currentQuestion + 1} / {questionsBase.length}</span>\r\n          </section>\r\n          <section className={s.answer__options}>\r\n            {\r\n              questionsBase[currentQuestion].answersOption.map((item) => (\r\n                <Button \r\n                  key={uniqueKey()}\r\n                  handleClick={handleAnswer}\r\n                  param={item}\r\n                >\r\n                  {item.answerText}\r\n                </Button>\r\n              ))\r\n            }            \r\n          </section> \r\n        </main>\r\n    )      \r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\nimport './App.css';\nimport { questionsBase } from './questionsBase';\nimport ShowScore from './component/showScore/showScore';\nimport Main from './component/main/main';\n\n\nfunction App() {  \n\n  const [score, setScore] = useState(0); // Колличество правильных ответов\n  const [isShowScore, setShowScore] = useState(false); // Показывается результат в конце теста\n  const [currentAnswer, setCurrentAnswer] = useState([]); // Храняться ответы пользователя\n  const [currentQuestion, setCurrentQuestion] = useState(0); // Номер вопроса\n  \n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n      { \n        !isShowScore\n        ? <Main score={score}\n                  setScore={setScore} \n                  setShowScore={setShowScore}\n                  questionsBase={questionsBase}\n                  currentAnswer={currentAnswer}\n                  setCurrentAnswer={setCurrentAnswer}\n                  currentQuestion={currentQuestion}\n                  setCurrentQuestion={setCurrentQuestion}\n          />\n        : \n          <ShowScore  score={score}\n                      setScore={setScore}\n                      currentAnswer={currentAnswer}\n                      questionsBase={questionsBase}\n                      setShowScore={setShowScore}\n                      setCurrentAnswer={setCurrentAnswer}\n                      setCurrentQuestion={setCurrentQuestion}\n          />\n      }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}